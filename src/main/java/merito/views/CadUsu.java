package merito.views;

import merito.model.PessoaModel;
import merito.model.UserModel;
import merito.dao.PessoaDao;
import merito.dao.UtilsDao;
import merito.utils.Utils;
import java.awt.Toolkit;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.awt.Image;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Rafael
 */
public class CadUsu extends javax.swing.JFrame {
    
    private final PessoaDao pessoaDao = new PessoaDao();
    private DefaultTableModel tmConsulta = new DefaultTableModel(null, new String[]{"Nome", "Usuário", "ID de Usuário"});;
    private final List<PessoaModel> clientes;
    private List<UserModel> users;
    private boolean inicializando;
    
    
    /**
     * Creates new form CadUsu
          * @throws ClassNotFoundException 
          */
         public CadUsu() throws ClassNotFoundException {
        initComponents();
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage("user.png");
        this.setIconImage(img);
        
        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centro = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centro.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        tbConsultas.getColumnModel().getColumn(0).setPreferredWidth(10);
        tbConsultas.getColumnModel().getColumn(1).setPreferredWidth(10);
        tbConsultas.getColumnModel().getColumn(2).setPreferredWidth(10);
        tbConsultas.getColumnModel().getColumn(0).setCellRenderer(direita);
        tbConsultas.setAutoCreateRowSorter(true);
        tbConsultas.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
               tbConsultaLinhaSelecionada(tbConsultas);
            }
        });
        
        clientes = pessoaDao.listarSQL();
        cbCliente.removeAllItems();
        for(int i = 0; i < clientes.size(); i++){
            cbCliente.addItem(clientes.get(i).getNome());
        }
        
        listar();

    }
    
    protected void tbConsultaLinhaSelecionada(JTable tb){
        try{
            if(tb.getSelectedRow() != -1 && !inicializando){
                int ls = tbConsultas.convertRowIndexToModel(tb.getSelectedRow());
                for(int i = 0; i < clientes.size(); i++){
                    PessoaModel p = clientes.get(i);
                    if(p.getId() == users.get(ls).getPessoaId()){
                        cbCliente.setSelectedIndex(i);
                        break;
                    }
                }
                
                
                tfUsu.setText(users.get(ls).getNome());
                tfId.setText(users.get(ls).getUserId()+"");
                tfPessoaId.setText(users.get(ls).getPessoaId()+"");
               
            } else {
                limparCampos();
            }
        } catch (Exception ex){
            ex.printStackTrace();
        }
    }
    
    private boolean verificarCampos(){
        if(cbCliente.getSelectedIndex() > -1 && !tfUsu.getText().trim().isEmpty()){
            return true;
        }
        JOptionPane.showMessageDialog(null, "Verifique os campos");
        return false;
    }
    
    private void listar(){
        try {
            users = pessoaDao.listarUser();
            mostrar(users);
        } catch (Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Pesquisa : " + ex.getLocalizedMessage());
        }
    }
    
    private void mostrar(List<UserModel> lista){
        inicializando = true;
        while(tmConsulta.getRowCount() > 0){
            tmConsulta.removeRow(0);
        }
        inicializando = false;
        
        if(lista.isEmpty()){
            JOptionPane.showMessageDialog(null, "Sem usuários");
        } else {
            String[] usuario = new String[]{null, null, null};
            for(int i =0; i < lista.size(); i++){
                tmConsulta.addRow(usuario);
                tmConsulta.setValueAt(lista.get(i).getPessoa(), i, 0);
                tmConsulta.setValueAt(lista.get(i).getNome(), i, 1);
                tmConsulta.setValueAt(lista.get(i).getUserId(), i, 2);
            }
        }
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbConsultas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Senha = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfUsu = new javax.swing.JTextField();
        tfPass = new javax.swing.JTextField();
        tfPass2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tfPessoaId = new javax.swing.JTextField();
        cbCliente = new javax.swing.JComboBox<>();
        btAdc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbConsultas.setModel(tmConsulta);
        jScrollPane1.setViewportView(tbConsultas);

        jLabel1.setText("Nome::");

        jLabel2.setText("Usuário:");

        Senha.setText("Senha:");

        jLabel4.setText("Confirmação de Senha:");

        jLabel3.setText("ID de usuário");

        tfId.setEditable(false);

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btExcluirActionPerformed(evt);
                } catch (ClassNotFoundException e) {
                    e.printStackTrace();
                }
            }
        });

        jLabel5.setText("ID de Cliente");

        tfPessoaId.setEditable(false);

        cbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClienteActionPerformed(evt);
            }
        });

        btAdc.setText("+");
        btAdc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btAdc, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(120, 120, 120)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(tfUsu, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Senha)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfPass, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(tfPessoaId, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btExcluir))
                        .addGap(5, 5, 5)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btAdc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUsu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPessoaId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Senha)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(btExcluir))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        salvar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException {//GEN-FIRST:event_btExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void cbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClienteActionPerformed
        int selectedIndex = cbCliente.getSelectedIndex();
        if (selectedIndex >= 0 && selectedIndex < clientes.size()) {
            PessoaModel selecionada = clientes.get(selectedIndex);
            long idCliente = selecionada.getId();

            for (PessoaModel pessoa : clientes) {
                if (pessoa.getId() == idCliente) {
                    tfPessoaId.setText(pessoa.getId()+"");
                    break;
                }
            }
        }
    }//GEN-LAST:event_cbClienteActionPerformed

    private void btAdcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdcActionPerformed
       limparCampos();
    }//GEN-LAST:event_btAdcActionPerformed

    private void salvar(){
        if(verificarCampos()){
            try{
                UserModel user = new UserModel();
                user.setNome(tfUsu.getText());
                user.setPessoaId(Long.parseLong(tfPessoaId.getText()));                
                if(tfId.getText().trim().isEmpty()){
                    if(tfPass.getText().trim().equals(tfPass2.getText().trim())){
                        String pass = Utils.cripto(tfPass.getText().trim());
                        user.setPass(pass);                        
                        user.setUserId(UtilsDao.gerarId("usu_id","users"));
                        pessoaDao.cadastrarUser(user);
                        limparCampos();                       
                    } else {
                        JOptionPane.showMessageDialog(null, "Senhas não conferem");
                    }
                } else {
                    user.setUserId(Long.parseLong(tfId.getText()));
                    pessoaDao.alterarUser(user);
                    limparCampos();
                }
                listar();
            } catch (Exception ex){
                ex.printStackTrace();
            }
        }
    }
    
    private void excluir() throws ClassNotFoundException{
        if(tbConsultas.getSelectedRow() != -1){
            int ls = tbConsultas.convertRowIndexToModel(tbConsultas.getSelectedRow());
            pessoaDao.excluirUser(users.get(ls).getUserId());
        } 
        listar();
    }
    
    private void limparCampos(){
        tfId.setText("");
        tfPessoaId.setText("");
        cbCliente.setSelectedIndex(0);
        tfUsu.setText("");
        tfPass.setText("");
        tfPass2.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadUsu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadUsu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadUsu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadUsu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CadUsu().setVisible(true);
                } catch (ClassNotFoundException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Senha;
    private javax.swing.JButton btAdc;
    private javax.swing.JButton btExcluir;
    private javax.swing.JComboBox<String> cbCliente;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbConsultas;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfPass;
    private javax.swing.JTextField tfPass2;
    private javax.swing.JTextField tfPessoaId;
    private javax.swing.JTextField tfUsu;
    // End of variables declaration//GEN-END:variables
}
